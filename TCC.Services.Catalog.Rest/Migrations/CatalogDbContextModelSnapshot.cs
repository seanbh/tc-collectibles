// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TCC.Services.Catalog.Rest.DbContexts;

namespace TCC.Services.Catalog.Rest.Migrations
{
    [DbContext(typeof(CatalogDbContext))]
    partial class CatalogDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TCC.Services.Catalog.Rest.Entities.Category", b =>
                {
                    b.Property<Guid>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = new Guid("b0788d2f-8003-43c1-92a4-edc76a7c5dde"),
                            Name = "Baseball Cards"
                        },
                        new
                        {
                            CategoryId = new Guid("6313179f-7837-473a-a4d5-a5571b43e6a6"),
                            Name = "Football Cards"
                        },
                        new
                        {
                            CategoryId = new Guid("bf3f3002-7e53-441e-8b76-f6280be284aa"),
                            Name = "Basketball Cards"
                        },
                        new
                        {
                            CategoryId = new Guid("fe98f549-e790-4e9f-aa16-18c2292a2ee9"),
                            Name = "Hockey Cards"
                        });
                });

            modelBuilder.Entity("TCC.Services.Catalog.Rest.Entities.Product", b =>
                {
                    b.Property<Guid>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Year")
                        .HasColumnType("datetime2");

                    b.HasKey("ProductId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = new Guid("ee272f8b-6096-4cb6-8625-bb4bb2d89e8b"),
                            CategoryId = new Guid("b0788d2f-8003-43c1-92a4-edc76a7c5dde"),
                            ImageUrl = "https://gillcleerenpluralsight.blob.core.windows.net/files/GloboTicket/banjo.jpg",
                            Name = "John Egbert Live",
                            Price = 65m,
                            Year = new DateTime(2021, 11, 26, 15, 57, 18, 607, DateTimeKind.Local).AddTicks(92)
                        },
                        new
                        {
                            ProductId = new Guid("3448d5a4-0f72-4dd7-bf15-c14a46b26c00"),
                            CategoryId = new Guid("b0788d2f-8003-43c1-92a4-edc76a7c5dde"),
                            ImageUrl = "https://gillcleerenpluralsight.blob.core.windows.net/files/GloboTicket/michael.jpg",
                            Name = "The State of Affairs: Michael Live!",
                            Price = 85m,
                            Year = new DateTime(2022, 2, 26, 15, 57, 18, 608, DateTimeKind.Local).AddTicks(6987)
                        },
                        new
                        {
                            ProductId = new Guid("b419a7ca-3321-4f38-be8e-4d7b6a529319"),
                            CategoryId = new Guid("b0788d2f-8003-43c1-92a4-edc76a7c5dde"),
                            ImageUrl = "https://gillcleerenpluralsight.blob.core.windows.net/files/GloboTicket/dj.jpg",
                            Name = "Clash of the DJs",
                            Price = 85m,
                            Year = new DateTime(2021, 9, 26, 15, 57, 18, 608, DateTimeKind.Local).AddTicks(7024)
                        },
                        new
                        {
                            ProductId = new Guid("62787623-4c52-43fe-b0c9-b7044fb5929b"),
                            CategoryId = new Guid("b0788d2f-8003-43c1-92a4-edc76a7c5dde"),
                            ImageUrl = "https://gillcleerenpluralsight.blob.core.windows.net/files/GloboTicket/guitar.jpg",
                            Name = "Spanish guitar hits with Manuel",
                            Price = 25m,
                            Year = new DateTime(2021, 9, 26, 15, 57, 18, 608, DateTimeKind.Local).AddTicks(7040)
                        },
                        new
                        {
                            ProductId = new Guid("1babd057-e980-4cb3-9cd2-7fdd9e525668"),
                            CategoryId = new Guid("fe98f549-e790-4e9f-aa16-18c2292a2ee9"),
                            ImageUrl = "https://gillcleerenpluralsight.blob.core.windows.net/files/GloboTicket/conf.jpg",
                            Name = "Techorama 2021",
                            Price = 400m,
                            Year = new DateTime(2022, 3, 26, 15, 57, 18, 608, DateTimeKind.Local).AddTicks(7052)
                        },
                        new
                        {
                            ProductId = new Guid("adc42c09-08c1-4d2c-9f96-2d15bb1af299"),
                            CategoryId = new Guid("6313179f-7837-473a-a4d5-a5571b43e6a6"),
                            ImageUrl = "https://gillcleerenpluralsight.blob.core.windows.net/files/GloboTicket/musical.jpg",
                            Name = "To the Moon and Back",
                            Price = 135m,
                            Year = new DateTime(2022, 1, 26, 15, 57, 18, 608, DateTimeKind.Local).AddTicks(7067)
                        });
                });

            modelBuilder.Entity("TCC.Services.Catalog.Rest.Entities.Product", b =>
                {
                    b.HasOne("TCC.Services.Catalog.Rest.Entities.Category", null)
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
